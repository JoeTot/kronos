// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/gossip.proto

package kronospb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	// node_id is the id of the node that sent the request
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// addr is the address of the node that sent the request
	AdvertisedHostPort string `protobuf:"bytes,2,opt,name=advertised_host_port,json=advertisedHostPort,proto3" json:"advertised_host_port,omitempty"`
	// cluster_id is the id of the cluster that sent the request
	ClusterId            string           `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	GossipMap            map[string]*Info `protobuf:"bytes,4,rep,name=gossipMap,proto3" json:"gossipMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_bc3b2a3925ef8e8b, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *Request) GetAdvertisedHostPort() string {
	if m != nil {
		return m.AdvertisedHostPort
	}
	return ""
}

func (m *Request) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *Request) GetGossipMap() map[string]*Info {
	if m != nil {
		return m.GossipMap
	}
	return nil
}

type Info struct {
	// timestamp is the time at which the info was added
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// data is the actual data
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_bc3b2a3925ef8e8b, []int{1}
}
func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (dst *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(dst, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Info) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Response struct {
	// node_id is the id of the node that sent the response
	NodeId               string           `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Data                 map[string]*Info `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_bc3b2a3925ef8e8b, []int{2}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *Response) GetData() map[string]*Info {
	if m != nil {
		return m.Data
	}
	return nil
}

type NodeDescriptor struct {
	// node_id is the id of the node
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// grpc_addr is the grpc address of the node
	GrpcAddr string `protobuf:"bytes,2,opt,name=grpc_addr,json=grpcAddr,proto3" json:"grpc_addr,omitempty"`
	// raft_addr is the raft address of the node
	RaftAddr string `protobuf:"bytes,3,opt,name=raft_addr,json=raftAddr,proto3" json:"raft_addr,omitempty"`
	// is_bootstrapped is true if the node is bootstrapped
	IsBootstrapped bool `protobuf:"varint,4,opt,name=is_bootstrapped,json=isBootstrapped,proto3" json:"is_bootstrapped,omitempty"`
	// is_removed is true if the node is removed
	IsRemoved bool `protobuf:"varint,5,opt,name=is_removed,json=isRemoved,proto3" json:"is_removed,omitempty"`
	// last_heartbeat is the last time the node sent a heartbeat
	LastHeartbeat int64 `protobuf:"varint,6,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	// cluster_id is the id of the cluster
	ClusterId            string   `protobuf:"bytes,7,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeDescriptor) Reset()         { *m = NodeDescriptor{} }
func (m *NodeDescriptor) String() string { return proto.CompactTextString(m) }
func (*NodeDescriptor) ProtoMessage()    {}
func (*NodeDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_bc3b2a3925ef8e8b, []int{3}
}
func (m *NodeDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeDescriptor.Unmarshal(m, b)
}
func (m *NodeDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeDescriptor.Marshal(b, m, deterministic)
}
func (dst *NodeDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeDescriptor.Merge(dst, src)
}
func (m *NodeDescriptor) XXX_Size() int {
	return xxx_messageInfo_NodeDescriptor.Size(m)
}
func (m *NodeDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_NodeDescriptor proto.InternalMessageInfo

func (m *NodeDescriptor) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeDescriptor) GetGrpcAddr() string {
	if m != nil {
		return m.GrpcAddr
	}
	return ""
}

func (m *NodeDescriptor) GetRaftAddr() string {
	if m != nil {
		return m.RaftAddr
	}
	return ""
}

func (m *NodeDescriptor) GetIsBootstrapped() bool {
	if m != nil {
		return m.IsBootstrapped
	}
	return false
}

func (m *NodeDescriptor) GetIsRemoved() bool {
	if m != nil {
		return m.IsRemoved
	}
	return false
}

func (m *NodeDescriptor) GetLastHeartbeat() int64 {
	if m != nil {
		return m.LastHeartbeat
	}
	return 0
}

func (m *NodeDescriptor) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

type NodeLsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeLsRequest) Reset()         { *m = NodeLsRequest{} }
func (m *NodeLsRequest) String() string { return proto.CompactTextString(m) }
func (*NodeLsRequest) ProtoMessage()    {}
func (*NodeLsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_bc3b2a3925ef8e8b, []int{4}
}
func (m *NodeLsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeLsRequest.Unmarshal(m, b)
}
func (m *NodeLsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeLsRequest.Marshal(b, m, deterministic)
}
func (dst *NodeLsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeLsRequest.Merge(dst, src)
}
func (m *NodeLsRequest) XXX_Size() int {
	return xxx_messageInfo_NodeLsRequest.Size(m)
}
func (m *NodeLsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeLsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeLsRequest proto.InternalMessageInfo

type NodeLsResponse struct {
	Nodes                []*NodeDescriptor `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NodeLsResponse) Reset()         { *m = NodeLsResponse{} }
func (m *NodeLsResponse) String() string { return proto.CompactTextString(m) }
func (*NodeLsResponse) ProtoMessage()    {}
func (*NodeLsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_bc3b2a3925ef8e8b, []int{5}
}
func (m *NodeLsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeLsResponse.Unmarshal(m, b)
}
func (m *NodeLsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeLsResponse.Marshal(b, m, deterministic)
}
func (dst *NodeLsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeLsResponse.Merge(dst, src)
}
func (m *NodeLsResponse) XXX_Size() int {
	return xxx_messageInfo_NodeLsResponse.Size(m)
}
func (m *NodeLsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeLsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeLsResponse proto.InternalMessageInfo

func (m *NodeLsResponse) GetNodes() []*NodeDescriptor {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "kronospb.Request")
	proto.RegisterMapType((map[string]*Info)(nil), "kronospb.Request.GossipMapEntry")
	proto.RegisterType((*Info)(nil), "kronospb.Info")
	proto.RegisterType((*Response)(nil), "kronospb.Response")
	proto.RegisterMapType((map[string]*Info)(nil), "kronospb.Response.DataEntry")
	proto.RegisterType((*NodeDescriptor)(nil), "kronospb.NodeDescriptor")
	proto.RegisterType((*NodeLsRequest)(nil), "kronospb.NodeLsRequest")
	proto.RegisterType((*NodeLsResponse)(nil), "kronospb.NodeLsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GossipClient is the client API for Gossip service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GossipClient interface {
	Gossip(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	NodeLs(ctx context.Context, in *NodeLsRequest, opts ...grpc.CallOption) (*NodeLsResponse, error)
}

type gossipClient struct {
	cc *grpc.ClientConn
}

func NewGossipClient(cc *grpc.ClientConn) GossipClient {
	return &gossipClient{cc}
}

func (c *gossipClient) Gossip(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/kronospb.Gossip/Gossip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gossipClient) NodeLs(ctx context.Context, in *NodeLsRequest, opts ...grpc.CallOption) (*NodeLsResponse, error) {
	out := new(NodeLsResponse)
	err := c.cc.Invoke(ctx, "/kronospb.Gossip/NodeLs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GossipServer is the server API for Gossip service.
type GossipServer interface {
	Gossip(context.Context, *Request) (*Response, error)
	NodeLs(context.Context, *NodeLsRequest) (*NodeLsResponse, error)
}

func RegisterGossipServer(s *grpc.Server, srv GossipServer) {
	s.RegisterService(&_Gossip_serviceDesc, srv)
}

func _Gossip_Gossip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GossipServer).Gossip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kronospb.Gossip/Gossip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GossipServer).Gossip(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gossip_NodeLs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeLsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GossipServer).NodeLs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kronospb.Gossip/NodeLs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GossipServer).NodeLs(ctx, req.(*NodeLsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gossip_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kronospb.Gossip",
	HandlerType: (*GossipServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Gossip",
			Handler:    _Gossip_Gossip_Handler,
		},
		{
			MethodName: "NodeLs",
			Handler:    _Gossip_NodeLs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/gossip.proto",
}

func init() { proto.RegisterFile("pb/gossip.proto", fileDescriptor_gossip_bc3b2a3925ef8e8b) }

var fileDescriptor_gossip_bc3b2a3925ef8e8b = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x4d, 0x6f, 0x13, 0x31,
	0x10, 0x65, 0xf3, 0xbd, 0x53, 0x9a, 0x80, 0x85, 0xd4, 0x55, 0x28, 0x52, 0xb4, 0x02, 0x91, 0xd3,
	0x02, 0xe1, 0x52, 0x21, 0x81, 0xa0, 0x2a, 0x6a, 0x23, 0x15, 0x84, 0x7c, 0xe4, 0xb2, 0x72, 0x62,
	0xb7, 0x5d, 0x35, 0x89, 0x8d, 0x67, 0x12, 0xa9, 0xdc, 0xf8, 0x23, 0xfc, 0x47, 0xfe, 0x01, 0xb2,
	0xbd, 0xc9, 0x36, 0x8d, 0xe0, 0xd2, 0xdb, 0xec, 0x7b, 0x33, 0xb3, 0x6f, 0x66, 0x9e, 0xa1, 0x67,
	0x26, 0xaf, 0x2e, 0x35, 0x62, 0x61, 0x32, 0x63, 0x35, 0x69, 0xd6, 0xb9, 0xb6, 0x7a, 0xa1, 0xd1,
	0x4c, 0xd2, 0x5f, 0x35, 0x68, 0x73, 0xf5, 0x63, 0xa9, 0x90, 0xd8, 0x01, 0xb4, 0x17, 0x5a, 0xaa,
	0xbc, 0x90, 0x49, 0x34, 0x88, 0x86, 0x31, 0x6f, 0xb9, 0xcf, 0xb1, 0x64, 0xaf, 0xe1, 0x89, 0x90,
	0x2b, 0x65, 0xa9, 0x40, 0x25, 0xf3, 0x2b, 0x8d, 0x94, 0x1b, 0x6d, 0x29, 0xa9, 0xf9, 0x2c, 0x56,
	0x71, 0x67, 0x1a, 0xe9, 0x9b, 0xb6, 0xc4, 0x9e, 0x01, 0x4c, 0x67, 0x4b, 0x24, 0x65, 0x5d, 0xb7,
	0xba, 0xcf, 0x8b, 0x4b, 0x64, 0x2c, 0xd9, 0x07, 0x88, 0x83, 0x9e, 0x2f, 0xc2, 0x24, 0x8d, 0x41,
	0x7d, 0xb8, 0x37, 0x1a, 0x64, 0x6b, 0x4d, 0x59, 0xa9, 0x27, 0x3b, 0x5d, 0xa7, 0x7c, 0x5e, 0x90,
	0xbd, 0xe1, 0x55, 0x49, 0xff, 0x1c, 0xba, 0xdb, 0x24, 0x7b, 0x04, 0xf5, 0x6b, 0x75, 0x53, 0xea,
	0x76, 0x21, 0x7b, 0x0e, 0xcd, 0x95, 0x98, 0x2d, 0x95, 0x57, 0xb9, 0x37, 0xea, 0x56, 0xfd, 0xc7,
	0x8b, 0x0b, 0xcd, 0x03, 0xf9, 0xae, 0x76, 0x14, 0xa5, 0x47, 0xd0, 0x70, 0x10, 0x3b, 0x84, 0x98,
	0x8a, 0xb9, 0x42, 0x12, 0x73, 0xe3, 0x3b, 0xd5, 0x79, 0x05, 0x30, 0x06, 0x0d, 0x29, 0x48, 0xf8,
	0x76, 0x0f, 0xb9, 0x8f, 0xd3, 0xdf, 0x11, 0x74, 0xb8, 0x42, 0xa3, 0x17, 0xa8, 0xfe, 0xb7, 0xbe,
	0x75, 0xa5, 0x1b, 0xf4, 0xf0, 0xf6, 0xa0, 0xa1, 0x34, 0x3b, 0x11, 0x24, 0xc2, 0x90, 0x3e, 0xb3,
	0x7f, 0x0a, 0xf1, 0x06, 0xba, 0xd7, 0x68, 0x7f, 0x22, 0xe8, 0x7e, 0xd5, 0x52, 0x9d, 0x28, 0x9c,
	0xda, 0xc2, 0x90, 0xb6, 0xff, 0x96, 0xf9, 0x14, 0xe2, 0x4b, 0x6b, 0xa6, 0xb9, 0x90, 0xd2, 0x96,
	0xa7, 0xed, 0x38, 0xe0, 0x93, 0x94, 0xd6, 0x91, 0x56, 0x5c, 0x50, 0x20, 0xc3, 0x3d, 0x3b, 0x0e,
	0xf0, 0xe4, 0x4b, 0xe8, 0x15, 0x98, 0x4f, 0xb4, 0x26, 0x24, 0x2b, 0x8c, 0x51, 0x32, 0x69, 0x0c,
	0xa2, 0x61, 0x87, 0x77, 0x0b, 0x3c, 0xbe, 0x85, 0x3a, 0x5b, 0x14, 0x98, 0x5b, 0x35, 0xd7, 0x2b,
	0x25, 0x93, 0xa6, 0xcf, 0x89, 0x0b, 0xe4, 0x01, 0x60, 0x2f, 0xa0, 0x3b, 0x13, 0x48, 0xf9, 0x95,
	0x12, 0x96, 0x26, 0x4a, 0x50, 0xd2, 0xf2, 0x57, 0xd8, 0x77, 0xe8, 0xd9, 0x1a, 0xbc, 0x63, 0xae,
	0xf6, 0x1d, 0x73, 0xa5, 0x3d, 0xd8, 0x77, 0x23, 0x9f, 0x63, 0xe9, 0xa3, 0xf4, 0x63, 0xd8, 0x81,
	0x03, 0xca, 0x53, 0x65, 0xd0, 0x74, 0x43, 0x63, 0x12, 0xf9, 0x93, 0x24, 0xd5, 0x02, 0xb7, 0x97,
	0xc5, 0x43, 0xda, 0xe8, 0x27, 0xb4, 0x82, 0xdf, 0xd8, 0x9b, 0x4d, 0xf4, 0x78, 0xc7, 0xb0, 0x7d,
	0xb6, 0x7b, 0xda, 0xf4, 0x01, 0x7b, 0x0f, 0xad, 0xf0, 0x7b, 0x76, 0xb0, 0xfd, 0x9f, 0x8d, 0xc2,
	0x7e, 0xb2, 0x4b, 0xac, 0xcb, 0x8f, 0xe1, 0xfb, 0xe6, 0xb5, 0x4e, 0x5a, 0xfe, 0xf9, 0xbe, 0xfd,
	0x1b, 0x00, 0x00, 0xff, 0xff, 0xee, 0x0f, 0x94, 0xcb, 0xd1, 0x03, 0x00, 0x00,
}
